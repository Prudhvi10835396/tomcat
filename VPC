VPC
create a vpc :-devops-vpc
name : devops-vpc 
vpc only 
ipvr cidr : 10.0.0.0/16
create a internet gateway name : devops-igw
create public-subet select devops-vpc
name : public-subnet
zone : us-east-1a
vpc cidr : 10.0.0.0/16
subnet cidr : 10.0.0.0/24
create private-subnet
name : private-subnet
zone : 1b
vpc cidr : 10.0.0.0/16
subnet cidr : 10.0.1.0/25
attach the vpc to internet gateway path: internet gateway < select devops igw < actions < attach to vpc
create a public-rt
edit routes < add intenet gatway
associate public-subnet with public-rt from edit subnet associations
create private-rt and associate with private-subnet
create a public-server instance 
vpc : devops-vpc
subnet : public-subnet
auto-assign public ip : enable
sg : create -> public sg -> enable the port http and all icmp ipv4
connect
#yum install httpd -y
#cd /var/www/html
#echo "this is aws server" > index.html
#ll
#systemctl restart httpd
#systemctl enable httpd
#systemctl status httpd
copy the public ip and paste it in browser
create private-server instance
name : private-server
vpc : devops-vpc
subent: private-subnet
auto-asign public ip : disable
sg : select existing -> public-sg
#vim lti-mahape-key.pem
paste the private key content
#chmod 400 lti-mahape-key.pem
connect the private-server
#ping google.com (it will not work)
create NAT gateway 
name : devops-ngw
subnet : public-subnet
elastic ip : allocate 
edit private-rt and add NAT-gateway -> save changes
#ping google.com (it should work)
====================================================================================================================
******Using 2 vpc sending data from one region to another*******
N.Virgina
Create vpc :- dev-vpc , 10.0.0.0/16
Igw :- dev-igw , attach igw to vpc
subnet :- public-subnet , 1a , 10.0.0.0/16 , 10.0.0.0/24
          private-subnet , 1b , 10.0.0.0/16, 10.0.1.0/24
route table :- public-rt , dev-vpc
edit routes :- 0.0.0-- , igw , save changes
route table :- private-rt , dev-vpc 
associate subnets
create instance :- public-server , lti keuy , dev-vpc , public-subnet , create sg , add http , icmp
create instance :- private-server , dev-vpc , private-subnet , disabled , existing sg
connect 
#sudo su -
#yum install httpd -y
#cd /var/www/html
#echo "this is web server" > index.html
#ll
#systemctl restart httpd
#systemctl enable httpd
paste public ip of ng instance
#cd
copy private-server ip add
#ping ip_add
----------ohio-region----------
create vpc :- AI-project , 20.0.0.0/16
igw - AI-project-igw , attach to vpc 
subnet :- web-subnet , 2a , 20.0.0.0/24
          db-subnet , 2b, 20.0.1.0/24
route table :- web-rt , AI-project,   
edit routes :- igw
associate subnets
route table :- db-rt 
instances :- create :- web-server , sg(web-sg)(new) , allow icmp , http
create : db-server 
connect
#sudo su -
#yum install httpd -y
#ping ip_add (private ip of db_Server)
#passwd root 
#vim /etc/ssh/sshd_config (edit permintrootpassword , passwordauthentication -> yes)
systemctl restart sshd
systemctl enable sshd
do these changes in the both machines
create files on the both the machines 
cat > devops.txt provide some content in that (similary do it in N.virgina region)
create peering connections 
name : dev-to-ai
vpc : dev-pc
another region 
us-east-2
vcpid (copy vpc id from the ohio region)
in ohio accept request -> under peering connections 
--------ohio-region----------------
route table :- web-rt 
edit :- add (10.0.0.0/16)  peering connection
--------N.V------------
route table :- private
edit :- add(20.0.0.0/16) peering connection 
------ohio terminal----------
scp devops.txt root@public-ip-(nv-region-termial):/tmp
------nv terminal----------
cd /tmp
ll
vice-versa (optional)
=======================================
https://website-2610-mansi.s3.us-east-1.amazonaws.com/AWS.docx
